name: CI/CD Pipeline

on:
  push:
    branches:
      - 'review/**'   # Exécute le workflow sur les branches de review
  pull_request:
    branches:
      - main          # Exécute le workflow lors des pull requests vers main

jobs:
  lint-format:
    name: Vérification PEP 8 et Formatage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Configuration de Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Installer Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.4

      - name: Installer les dépendances avec Poetry
        run: poetry install --no-root

      - name: Formater le code avec Black
        run: |
          poetry run black --check src/ scripts/ tests/  # Vérifie le format sans modifier

      - name: Vérifier les docstrings avec pydocstyle
        run: poetry run pydocstyle src/ scripts/ tests/

  test:
    name: Exécution des tests et couverture
    runs-on: ubuntu-latest
    needs: lint-format

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Configuration de Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Installer Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.4

      - name: Installer les dépendances avec Poetry
        run: poetry install

      - name: Exécuter les tests avec couverture
        run: |
          poetry run pytest --cov=src --cov-report=term-missing

      - name: Vérifier la couverture de test
        run: |
          poetry run coverage report --fail-under=90

  # deploy:
  #   name: Déploiement de l'application
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'

  #   steps:
  #     - name: Checkout du code
  #       uses: actions/checkout@v3

  #     - name: Configuration de Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.12'

  #     - name: Installer Poetry
  #       uses: snok/install-poetry@v1
  #       with:
  #         version: 1.8.4

  #     - name: Installer les dépendances avec Poetry
  #       run: poetry install

  #     - name: Déployer l'application
  #       env:
  #         DEPLOYMENT_KEY: ${{ secrets.DEPLOYMENT_KEY }}
  #       run: |
  #         # Exemple de déploiement via SSH
  #         echo "$DEPLOYMENT_KEY" > key.pem
  #         chmod 600 key.pem
  #         ssh -i key.pem user@server 'bash deploy.sh'
